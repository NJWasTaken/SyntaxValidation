Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function_list
Rule 2     function_list -> function_definition
Rule 3     function_list -> function_list function_definition
Rule 4     function_definition -> INT IDENTIFIER LPAREN array_param_list RPAREN compound_statement
Rule 5     function_definition -> FLOAT IDENTIFIER LPAREN array_param_list RPAREN compound_statement
Rule 6     compound_statement -> LBRACE statement_list RBRACE
Rule 7     array_param_list -> array_param
Rule 8     array_param_list -> param
Rule 9     array_param_list -> array_param_list COMMA array_param
Rule 10    array_param_list -> array_param_list COMMA param
Rule 11    array_param_list -> empty
Rule 12    array_param -> INT IDENTIFIER LBRACKET NUMBER RBRACKET
Rule 13    array_param -> FLOAT IDENTIFIER LBRACKET NUMBER RBRACKET
Rule 14    param -> INT IDENTIFIER
Rule 15    param -> FLOAT IDENTIFIER
Rule 16    statement_list -> statement
Rule 17    statement_list -> statement_list statement
Rule 18    statement_list -> empty
Rule 19    statement -> declaration
Rule 20    statement -> assignment
Rule 21    statement -> selection_statement
Rule 22    statement -> return_statement
Rule 23    statement -> compound_statement
Rule 24    declaration -> INT var_list SEMICOLON
Rule 25    declaration -> FLOAT var_list SEMICOLON
Rule 26    declaration -> INT IDENTIFIER EQUALS expression SEMICOLON
Rule 27    declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON
Rule 28    var_list -> variable
Rule 29    var_list -> var_list COMMA variable
Rule 30    variable -> IDENTIFIER
Rule 31    variable -> IDENTIFIER LBRACKET NUMBER RBRACKET
Rule 32    assignment -> IDENTIFIER EQUALS expression SEMICOLON
Rule 33    assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON
Rule 34    selection_statement -> IF LPAREN expression RPAREN statement
Rule 35    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 36    return_statement -> RETURN expression SEMICOLON
Rule 37    expression -> term
Rule 38    expression -> expression PLUS term
Rule 39    expression -> expression MINUS term
Rule 40    term -> factor
Rule 41    term -> term MULTIPLY factor
Rule 42    term -> term DIVIDE factor
Rule 43    factor -> NUMBER
Rule 44    factor -> FLOAT
Rule 45    factor -> array_access
Rule 46    factor -> IDENTIFIER
Rule 47    factor -> LPAREN expression RPAREN
Rule 48    array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET
Rule 49    array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET
Rule 50    expression -> expression GT expression
Rule 51    expression -> expression LT expression
Rule 52    expression -> expression GE expression
Rule 53    expression -> expression LE expression
Rule 54    expression -> expression EQ expression
Rule 55    expression -> expression NE expression
Rule 56    empty -> <empty>

Terminals, with rules where they appear

COMMA                : 9 10 29
DIVIDE               : 42
ELSE                 : 35
EQ                   : 54
EQUALS               : 26 27 32 33
FLOAT                : 5 13 15 25 27 44
GE                   : 52
GT                   : 50
IDENTIFIER           : 4 5 12 13 14 15 26 27 30 31 32 33 46 48 49 49
IF                   : 34 35
INT                  : 4 12 14 24 26
LBRACE               : 6
LBRACKET             : 12 13 31 33 48 49
LE                   : 53
LPAREN               : 4 5 34 35 47
LT                   : 51
MINUS                : 39
MULTIPLY             : 41
NE                   : 55
NUMBER               : 12 13 31 33 43 48
PLUS                 : 38
RBRACE               : 6
RBRACKET             : 12 13 31 33 48 49
RETURN               : 36
RPAREN               : 4 5 34 35 47
SEMICOLON            : 24 25 26 27 32 33 36
error                : 

Nonterminals, with rules where they appear

array_access         : 45
array_param          : 7 9
array_param_list     : 4 5 9 10
assignment           : 20
compound_statement   : 4 5 23
declaration          : 19
empty                : 11 18
expression           : 26 27 32 33 34 35 36 38 39 47 50 50 51 51 52 52 53 53 54 54 55 55
factor               : 40 41 42
function_definition  : 2 3
function_list        : 1 3
param                : 8 10
program              : 0
return_statement     : 22
selection_statement  : 21
statement            : 16 17 34 35 35
statement_list       : 6 17
term                 : 37 38 39 41 42
var_list             : 24 25 29
variable             : 28 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_list
    (2) function_list -> . function_definition
    (3) function_list -> . function_list function_definition
    (4) function_definition -> . INT IDENTIFIER LPAREN array_param_list RPAREN compound_statement
    (5) function_definition -> . FLOAT IDENTIFIER LPAREN array_param_list RPAREN compound_statement

    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    program                        shift and go to state 1
    function_list                  shift and go to state 2
    function_definition            shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> function_list .
    (3) function_list -> function_list . function_definition
    (4) function_definition -> . INT IDENTIFIER LPAREN array_param_list RPAREN compound_statement
    (5) function_definition -> . FLOAT IDENTIFIER LPAREN array_param_list RPAREN compound_statement

    $end            reduce using rule 1 (program -> function_list .)
    INT             shift and go to state 4
    FLOAT           shift and go to state 5

    function_definition            shift and go to state 6

state 3

    (2) function_list -> function_definition .

    INT             reduce using rule 2 (function_list -> function_definition .)
    FLOAT           reduce using rule 2 (function_list -> function_definition .)
    $end            reduce using rule 2 (function_list -> function_definition .)


state 4

    (4) function_definition -> INT . IDENTIFIER LPAREN array_param_list RPAREN compound_statement

    IDENTIFIER      shift and go to state 7


state 5

    (5) function_definition -> FLOAT . IDENTIFIER LPAREN array_param_list RPAREN compound_statement

    IDENTIFIER      shift and go to state 8


state 6

    (3) function_list -> function_list function_definition .

    INT             reduce using rule 3 (function_list -> function_list function_definition .)
    FLOAT           reduce using rule 3 (function_list -> function_list function_definition .)
    $end            reduce using rule 3 (function_list -> function_list function_definition .)


state 7

    (4) function_definition -> INT IDENTIFIER . LPAREN array_param_list RPAREN compound_statement

    LPAREN          shift and go to state 9


state 8

    (5) function_definition -> FLOAT IDENTIFIER . LPAREN array_param_list RPAREN compound_statement

    LPAREN          shift and go to state 10


state 9

    (4) function_definition -> INT IDENTIFIER LPAREN . array_param_list RPAREN compound_statement
    (7) array_param_list -> . array_param
    (8) array_param_list -> . param
    (9) array_param_list -> . array_param_list COMMA array_param
    (10) array_param_list -> . array_param_list COMMA param
    (11) array_param_list -> . empty
    (12) array_param -> . INT IDENTIFIER LBRACKET NUMBER RBRACKET
    (13) array_param -> . FLOAT IDENTIFIER LBRACKET NUMBER RBRACKET
    (14) param -> . INT IDENTIFIER
    (15) param -> . FLOAT IDENTIFIER
    (56) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 16
    RPAREN          reduce using rule 56 (empty -> .)
    COMMA           reduce using rule 56 (empty -> .)

    array_param_list               shift and go to state 12
    array_param                    shift and go to state 13
    param                          shift and go to state 14
    empty                          shift and go to state 15

state 10

    (5) function_definition -> FLOAT IDENTIFIER LPAREN . array_param_list RPAREN compound_statement
    (7) array_param_list -> . array_param
    (8) array_param_list -> . param
    (9) array_param_list -> . array_param_list COMMA array_param
    (10) array_param_list -> . array_param_list COMMA param
    (11) array_param_list -> . empty
    (12) array_param -> . INT IDENTIFIER LBRACKET NUMBER RBRACKET
    (13) array_param -> . FLOAT IDENTIFIER LBRACKET NUMBER RBRACKET
    (14) param -> . INT IDENTIFIER
    (15) param -> . FLOAT IDENTIFIER
    (56) empty -> .

    INT             shift and go to state 11
    FLOAT           shift and go to state 16
    RPAREN          reduce using rule 56 (empty -> .)
    COMMA           reduce using rule 56 (empty -> .)

    array_param_list               shift and go to state 17
    array_param                    shift and go to state 13
    param                          shift and go to state 14
    empty                          shift and go to state 15

state 11

    (12) array_param -> INT . IDENTIFIER LBRACKET NUMBER RBRACKET
    (14) param -> INT . IDENTIFIER

    IDENTIFIER      shift and go to state 18


state 12

    (4) function_definition -> INT IDENTIFIER LPAREN array_param_list . RPAREN compound_statement
    (9) array_param_list -> array_param_list . COMMA array_param
    (10) array_param_list -> array_param_list . COMMA param

    RPAREN          shift and go to state 19
    COMMA           shift and go to state 20


state 13

    (7) array_param_list -> array_param .

    RPAREN          reduce using rule 7 (array_param_list -> array_param .)
    COMMA           reduce using rule 7 (array_param_list -> array_param .)


state 14

    (8) array_param_list -> param .

    RPAREN          reduce using rule 8 (array_param_list -> param .)
    COMMA           reduce using rule 8 (array_param_list -> param .)


state 15

    (11) array_param_list -> empty .

    RPAREN          reduce using rule 11 (array_param_list -> empty .)
    COMMA           reduce using rule 11 (array_param_list -> empty .)


state 16

    (13) array_param -> FLOAT . IDENTIFIER LBRACKET NUMBER RBRACKET
    (15) param -> FLOAT . IDENTIFIER

    IDENTIFIER      shift and go to state 21


state 17

    (5) function_definition -> FLOAT IDENTIFIER LPAREN array_param_list . RPAREN compound_statement
    (9) array_param_list -> array_param_list . COMMA array_param
    (10) array_param_list -> array_param_list . COMMA param

    RPAREN          shift and go to state 22
    COMMA           shift and go to state 20


state 18

    (12) array_param -> INT IDENTIFIER . LBRACKET NUMBER RBRACKET
    (14) param -> INT IDENTIFIER .

    LBRACKET        shift and go to state 23
    RPAREN          reduce using rule 14 (param -> INT IDENTIFIER .)
    COMMA           reduce using rule 14 (param -> INT IDENTIFIER .)


state 19

    (4) function_definition -> INT IDENTIFIER LPAREN array_param_list RPAREN . compound_statement
    (6) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 25

    compound_statement             shift and go to state 24

state 20

    (9) array_param_list -> array_param_list COMMA . array_param
    (10) array_param_list -> array_param_list COMMA . param
    (12) array_param -> . INT IDENTIFIER LBRACKET NUMBER RBRACKET
    (13) array_param -> . FLOAT IDENTIFIER LBRACKET NUMBER RBRACKET
    (14) param -> . INT IDENTIFIER
    (15) param -> . FLOAT IDENTIFIER

    INT             shift and go to state 11
    FLOAT           shift and go to state 16

    array_param                    shift and go to state 26
    param                          shift and go to state 27

state 21

    (13) array_param -> FLOAT IDENTIFIER . LBRACKET NUMBER RBRACKET
    (15) param -> FLOAT IDENTIFIER .

    LBRACKET        shift and go to state 28
    RPAREN          reduce using rule 15 (param -> FLOAT IDENTIFIER .)
    COMMA           reduce using rule 15 (param -> FLOAT IDENTIFIER .)


state 22

    (5) function_definition -> FLOAT IDENTIFIER LPAREN array_param_list RPAREN . compound_statement
    (6) compound_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 25

    compound_statement             shift and go to state 29

state 23

    (12) array_param -> INT IDENTIFIER LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 30


state 24

    (4) function_definition -> INT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .

    INT             reduce using rule 4 (function_definition -> INT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .)
    FLOAT           reduce using rule 4 (function_definition -> INT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .)
    $end            reduce using rule 4 (function_definition -> INT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .)


state 25

    (6) compound_statement -> LBRACE . statement_list RBRACE
    (16) statement_list -> . statement
    (17) statement_list -> . statement_list statement
    (18) statement_list -> . empty
    (19) statement -> . declaration
    (20) statement -> . assignment
    (21) statement -> . selection_statement
    (22) statement -> . return_statement
    (23) statement -> . compound_statement
    (56) empty -> .
    (24) declaration -> . INT var_list SEMICOLON
    (25) declaration -> . FLOAT var_list SEMICOLON
    (26) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (27) declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (32) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (33) assignment -> . IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON
    (34) selection_statement -> . IF LPAREN expression RPAREN statement
    (35) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) return_statement -> . RETURN expression SEMICOLON
    (6) compound_statement -> . LBRACE statement_list RBRACE

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 56 (empty -> .)
    INT             shift and go to state 39
    FLOAT           shift and go to state 40
    IDENTIFIER      shift and go to state 41
    IF              shift and go to state 42
    RETURN          shift and go to state 43
    LBRACE          shift and go to state 25

  ! INT             [ reduce using rule 56 (empty -> .) ]
  ! FLOAT           [ reduce using rule 56 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! RETURN          [ reduce using rule 56 (empty -> .) ]
  ! LBRACE          [ reduce using rule 56 (empty -> .) ]

    statement_list                 shift and go to state 31
    statement                      shift and go to state 32
    empty                          shift and go to state 33
    declaration                    shift and go to state 34
    assignment                     shift and go to state 35
    selection_statement            shift and go to state 36
    return_statement               shift and go to state 37
    compound_statement             shift and go to state 38

state 26

    (9) array_param_list -> array_param_list COMMA array_param .

    RPAREN          reduce using rule 9 (array_param_list -> array_param_list COMMA array_param .)
    COMMA           reduce using rule 9 (array_param_list -> array_param_list COMMA array_param .)


state 27

    (10) array_param_list -> array_param_list COMMA param .

    RPAREN          reduce using rule 10 (array_param_list -> array_param_list COMMA param .)
    COMMA           reduce using rule 10 (array_param_list -> array_param_list COMMA param .)


state 28

    (13) array_param -> FLOAT IDENTIFIER LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 44


state 29

    (5) function_definition -> FLOAT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .

    INT             reduce using rule 5 (function_definition -> FLOAT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .)
    FLOAT           reduce using rule 5 (function_definition -> FLOAT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .)
    $end            reduce using rule 5 (function_definition -> FLOAT IDENTIFIER LPAREN array_param_list RPAREN compound_statement .)


state 30

    (12) array_param -> INT IDENTIFIER LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 45


state 31

    (6) compound_statement -> LBRACE statement_list . RBRACE
    (17) statement_list -> statement_list . statement
    (19) statement -> . declaration
    (20) statement -> . assignment
    (21) statement -> . selection_statement
    (22) statement -> . return_statement
    (23) statement -> . compound_statement
    (24) declaration -> . INT var_list SEMICOLON
    (25) declaration -> . FLOAT var_list SEMICOLON
    (26) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (27) declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (32) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (33) assignment -> . IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON
    (34) selection_statement -> . IF LPAREN expression RPAREN statement
    (35) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) return_statement -> . RETURN expression SEMICOLON
    (6) compound_statement -> . LBRACE statement_list RBRACE

    RBRACE          shift and go to state 46
    INT             shift and go to state 39
    FLOAT           shift and go to state 40
    IDENTIFIER      shift and go to state 41
    IF              shift and go to state 42
    RETURN          shift and go to state 43
    LBRACE          shift and go to state 25

    statement                      shift and go to state 47
    declaration                    shift and go to state 34
    assignment                     shift and go to state 35
    selection_statement            shift and go to state 36
    return_statement               shift and go to state 37
    compound_statement             shift and go to state 38

state 32

    (16) statement_list -> statement .

    RBRACE          reduce using rule 16 (statement_list -> statement .)
    INT             reduce using rule 16 (statement_list -> statement .)
    FLOAT           reduce using rule 16 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 16 (statement_list -> statement .)
    IF              reduce using rule 16 (statement_list -> statement .)
    RETURN          reduce using rule 16 (statement_list -> statement .)
    LBRACE          reduce using rule 16 (statement_list -> statement .)


state 33

    (18) statement_list -> empty .

    RBRACE          reduce using rule 18 (statement_list -> empty .)
    INT             reduce using rule 18 (statement_list -> empty .)
    FLOAT           reduce using rule 18 (statement_list -> empty .)
    IDENTIFIER      reduce using rule 18 (statement_list -> empty .)
    IF              reduce using rule 18 (statement_list -> empty .)
    RETURN          reduce using rule 18 (statement_list -> empty .)
    LBRACE          reduce using rule 18 (statement_list -> empty .)


state 34

    (19) statement -> declaration .

    RBRACE          reduce using rule 19 (statement -> declaration .)
    INT             reduce using rule 19 (statement -> declaration .)
    FLOAT           reduce using rule 19 (statement -> declaration .)
    IDENTIFIER      reduce using rule 19 (statement -> declaration .)
    IF              reduce using rule 19 (statement -> declaration .)
    RETURN          reduce using rule 19 (statement -> declaration .)
    LBRACE          reduce using rule 19 (statement -> declaration .)
    ELSE            reduce using rule 19 (statement -> declaration .)


state 35

    (20) statement -> assignment .

    RBRACE          reduce using rule 20 (statement -> assignment .)
    INT             reduce using rule 20 (statement -> assignment .)
    FLOAT           reduce using rule 20 (statement -> assignment .)
    IDENTIFIER      reduce using rule 20 (statement -> assignment .)
    IF              reduce using rule 20 (statement -> assignment .)
    RETURN          reduce using rule 20 (statement -> assignment .)
    LBRACE          reduce using rule 20 (statement -> assignment .)
    ELSE            reduce using rule 20 (statement -> assignment .)


state 36

    (21) statement -> selection_statement .

    RBRACE          reduce using rule 21 (statement -> selection_statement .)
    INT             reduce using rule 21 (statement -> selection_statement .)
    FLOAT           reduce using rule 21 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 21 (statement -> selection_statement .)
    IF              reduce using rule 21 (statement -> selection_statement .)
    RETURN          reduce using rule 21 (statement -> selection_statement .)
    LBRACE          reduce using rule 21 (statement -> selection_statement .)
    ELSE            reduce using rule 21 (statement -> selection_statement .)


state 37

    (22) statement -> return_statement .

    RBRACE          reduce using rule 22 (statement -> return_statement .)
    INT             reduce using rule 22 (statement -> return_statement .)
    FLOAT           reduce using rule 22 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 22 (statement -> return_statement .)
    IF              reduce using rule 22 (statement -> return_statement .)
    RETURN          reduce using rule 22 (statement -> return_statement .)
    LBRACE          reduce using rule 22 (statement -> return_statement .)
    ELSE            reduce using rule 22 (statement -> return_statement .)


state 38

    (23) statement -> compound_statement .

    RBRACE          reduce using rule 23 (statement -> compound_statement .)
    INT             reduce using rule 23 (statement -> compound_statement .)
    FLOAT           reduce using rule 23 (statement -> compound_statement .)
    IDENTIFIER      reduce using rule 23 (statement -> compound_statement .)
    IF              reduce using rule 23 (statement -> compound_statement .)
    RETURN          reduce using rule 23 (statement -> compound_statement .)
    LBRACE          reduce using rule 23 (statement -> compound_statement .)
    ELSE            reduce using rule 23 (statement -> compound_statement .)


state 39

    (24) declaration -> INT . var_list SEMICOLON
    (26) declaration -> INT . IDENTIFIER EQUALS expression SEMICOLON
    (28) var_list -> . variable
    (29) var_list -> . var_list COMMA variable
    (30) variable -> . IDENTIFIER
    (31) variable -> . IDENTIFIER LBRACKET NUMBER RBRACKET

    IDENTIFIER      shift and go to state 49

    var_list                       shift and go to state 48
    variable                       shift and go to state 50

state 40

    (25) declaration -> FLOAT . var_list SEMICOLON
    (27) declaration -> FLOAT . IDENTIFIER EQUALS expression SEMICOLON
    (28) var_list -> . variable
    (29) var_list -> . var_list COMMA variable
    (30) variable -> . IDENTIFIER
    (31) variable -> . IDENTIFIER LBRACKET NUMBER RBRACKET

    IDENTIFIER      shift and go to state 52

    var_list                       shift and go to state 51
    variable                       shift and go to state 50

state 41

    (32) assignment -> IDENTIFIER . EQUALS expression SEMICOLON
    (33) assignment -> IDENTIFIER . LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON

    EQUALS          shift and go to state 53
    LBRACKET        shift and go to state 54


state 42

    (34) selection_statement -> IF . LPAREN expression RPAREN statement
    (35) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 55


state 43

    (36) return_statement -> RETURN . expression SEMICOLON
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 56
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 44

    (13) array_param -> FLOAT IDENTIFIER LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 64


state 45

    (12) array_param -> INT IDENTIFIER LBRACKET NUMBER RBRACKET .

    RPAREN          reduce using rule 12 (array_param -> INT IDENTIFIER LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 12 (array_param -> INT IDENTIFIER LBRACKET NUMBER RBRACKET .)


state 46

    (6) compound_statement -> LBRACE statement_list RBRACE .

    INT             reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 6 (compound_statement -> LBRACE statement_list RBRACE .)


state 47

    (17) statement_list -> statement_list statement .

    RBRACE          reduce using rule 17 (statement_list -> statement_list statement .)
    INT             reduce using rule 17 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 17 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 17 (statement_list -> statement_list statement .)
    IF              reduce using rule 17 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 17 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 17 (statement_list -> statement_list statement .)


state 48

    (24) declaration -> INT var_list . SEMICOLON
    (29) var_list -> var_list . COMMA variable

    SEMICOLON       shift and go to state 65
    COMMA           shift and go to state 66


state 49

    (26) declaration -> INT IDENTIFIER . EQUALS expression SEMICOLON
    (30) variable -> IDENTIFIER .
    (31) variable -> IDENTIFIER . LBRACKET NUMBER RBRACKET

    EQUALS          shift and go to state 67
    SEMICOLON       reduce using rule 30 (variable -> IDENTIFIER .)
    COMMA           reduce using rule 30 (variable -> IDENTIFIER .)
    LBRACKET        shift and go to state 68


state 50

    (28) var_list -> variable .

    SEMICOLON       reduce using rule 28 (var_list -> variable .)
    COMMA           reduce using rule 28 (var_list -> variable .)


state 51

    (25) declaration -> FLOAT var_list . SEMICOLON
    (29) var_list -> var_list . COMMA variable

    SEMICOLON       shift and go to state 69
    COMMA           shift and go to state 66


state 52

    (27) declaration -> FLOAT IDENTIFIER . EQUALS expression SEMICOLON
    (30) variable -> IDENTIFIER .
    (31) variable -> IDENTIFIER . LBRACKET NUMBER RBRACKET

    EQUALS          shift and go to state 70
    SEMICOLON       reduce using rule 30 (variable -> IDENTIFIER .)
    COMMA           reduce using rule 30 (variable -> IDENTIFIER .)
    LBRACKET        shift and go to state 68


state 53

    (32) assignment -> IDENTIFIER EQUALS . expression SEMICOLON
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 71
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 54

    (33) assignment -> IDENTIFIER LBRACKET . NUMBER RBRACKET EQUALS expression SEMICOLON

    NUMBER          shift and go to state 72


state 55

    (34) selection_statement -> IF LPAREN . expression RPAREN statement
    (35) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 73
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 56

    (36) return_statement -> RETURN expression . SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

    SEMICOLON       shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82


state 57

    (37) expression -> term .
    (41) term -> term . MULTIPLY factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 37 (expression -> term .)
    PLUS            reduce using rule 37 (expression -> term .)
    MINUS           reduce using rule 37 (expression -> term .)
    GT              reduce using rule 37 (expression -> term .)
    LT              reduce using rule 37 (expression -> term .)
    GE              reduce using rule 37 (expression -> term .)
    LE              reduce using rule 37 (expression -> term .)
    EQ              reduce using rule 37 (expression -> term .)
    NE              reduce using rule 37 (expression -> term .)
    RPAREN          reduce using rule 37 (expression -> term .)
    MULTIPLY        shift and go to state 83
    DIVIDE          shift and go to state 84


state 58

    (40) term -> factor .

    MULTIPLY        reduce using rule 40 (term -> factor .)
    DIVIDE          reduce using rule 40 (term -> factor .)
    SEMICOLON       reduce using rule 40 (term -> factor .)
    PLUS            reduce using rule 40 (term -> factor .)
    MINUS           reduce using rule 40 (term -> factor .)
    GT              reduce using rule 40 (term -> factor .)
    LT              reduce using rule 40 (term -> factor .)
    GE              reduce using rule 40 (term -> factor .)
    LE              reduce using rule 40 (term -> factor .)
    EQ              reduce using rule 40 (term -> factor .)
    NE              reduce using rule 40 (term -> factor .)
    RPAREN          reduce using rule 40 (term -> factor .)


state 59

    (43) factor -> NUMBER .

    MULTIPLY        reduce using rule 43 (factor -> NUMBER .)
    DIVIDE          reduce using rule 43 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 43 (factor -> NUMBER .)
    PLUS            reduce using rule 43 (factor -> NUMBER .)
    MINUS           reduce using rule 43 (factor -> NUMBER .)
    GT              reduce using rule 43 (factor -> NUMBER .)
    LT              reduce using rule 43 (factor -> NUMBER .)
    GE              reduce using rule 43 (factor -> NUMBER .)
    LE              reduce using rule 43 (factor -> NUMBER .)
    EQ              reduce using rule 43 (factor -> NUMBER .)
    NE              reduce using rule 43 (factor -> NUMBER .)
    RPAREN          reduce using rule 43 (factor -> NUMBER .)


state 60

    (44) factor -> FLOAT .

    MULTIPLY        reduce using rule 44 (factor -> FLOAT .)
    DIVIDE          reduce using rule 44 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 44 (factor -> FLOAT .)
    PLUS            reduce using rule 44 (factor -> FLOAT .)
    MINUS           reduce using rule 44 (factor -> FLOAT .)
    GT              reduce using rule 44 (factor -> FLOAT .)
    LT              reduce using rule 44 (factor -> FLOAT .)
    GE              reduce using rule 44 (factor -> FLOAT .)
    LE              reduce using rule 44 (factor -> FLOAT .)
    EQ              reduce using rule 44 (factor -> FLOAT .)
    NE              reduce using rule 44 (factor -> FLOAT .)
    RPAREN          reduce using rule 44 (factor -> FLOAT .)


state 61

    (45) factor -> array_access .

    MULTIPLY        reduce using rule 45 (factor -> array_access .)
    DIVIDE          reduce using rule 45 (factor -> array_access .)
    SEMICOLON       reduce using rule 45 (factor -> array_access .)
    PLUS            reduce using rule 45 (factor -> array_access .)
    MINUS           reduce using rule 45 (factor -> array_access .)
    GT              reduce using rule 45 (factor -> array_access .)
    LT              reduce using rule 45 (factor -> array_access .)
    GE              reduce using rule 45 (factor -> array_access .)
    LE              reduce using rule 45 (factor -> array_access .)
    EQ              reduce using rule 45 (factor -> array_access .)
    NE              reduce using rule 45 (factor -> array_access .)
    RPAREN          reduce using rule 45 (factor -> array_access .)


state 62

    (46) factor -> IDENTIFIER .
    (48) array_access -> IDENTIFIER . LBRACKET NUMBER RBRACKET
    (49) array_access -> IDENTIFIER . LBRACKET IDENTIFIER RBRACKET

    MULTIPLY        reduce using rule 46 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 46 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 46 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 46 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 46 (factor -> IDENTIFIER .)
    GT              reduce using rule 46 (factor -> IDENTIFIER .)
    LT              reduce using rule 46 (factor -> IDENTIFIER .)
    GE              reduce using rule 46 (factor -> IDENTIFIER .)
    LE              reduce using rule 46 (factor -> IDENTIFIER .)
    EQ              reduce using rule 46 (factor -> IDENTIFIER .)
    NE              reduce using rule 46 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 46 (factor -> IDENTIFIER .)
    LBRACKET        shift and go to state 85


state 63

    (47) factor -> LPAREN . expression RPAREN
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 86
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 64

    (13) array_param -> FLOAT IDENTIFIER LBRACKET NUMBER RBRACKET .

    RPAREN          reduce using rule 13 (array_param -> FLOAT IDENTIFIER LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 13 (array_param -> FLOAT IDENTIFIER LBRACKET NUMBER RBRACKET .)


state 65

    (24) declaration -> INT var_list SEMICOLON .

    RBRACE          reduce using rule 24 (declaration -> INT var_list SEMICOLON .)
    INT             reduce using rule 24 (declaration -> INT var_list SEMICOLON .)
    FLOAT           reduce using rule 24 (declaration -> INT var_list SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (declaration -> INT var_list SEMICOLON .)
    IF              reduce using rule 24 (declaration -> INT var_list SEMICOLON .)
    RETURN          reduce using rule 24 (declaration -> INT var_list SEMICOLON .)
    LBRACE          reduce using rule 24 (declaration -> INT var_list SEMICOLON .)
    ELSE            reduce using rule 24 (declaration -> INT var_list SEMICOLON .)


state 66

    (29) var_list -> var_list COMMA . variable
    (30) variable -> . IDENTIFIER
    (31) variable -> . IDENTIFIER LBRACKET NUMBER RBRACKET

    IDENTIFIER      shift and go to state 88

    variable                       shift and go to state 87

state 67

    (26) declaration -> INT IDENTIFIER EQUALS . expression SEMICOLON
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 89
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 68

    (31) variable -> IDENTIFIER LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 90


state 69

    (25) declaration -> FLOAT var_list SEMICOLON .

    RBRACE          reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)
    INT             reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)
    FLOAT           reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)
    IF              reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)
    RETURN          reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)
    LBRACE          reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)
    ELSE            reduce using rule 25 (declaration -> FLOAT var_list SEMICOLON .)


state 70

    (27) declaration -> FLOAT IDENTIFIER EQUALS . expression SEMICOLON
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 91
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 71

    (32) assignment -> IDENTIFIER EQUALS expression . SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

    SEMICOLON       shift and go to state 92
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82


state 72

    (33) assignment -> IDENTIFIER LBRACKET NUMBER . RBRACKET EQUALS expression SEMICOLON

    RBRACKET        shift and go to state 93


state 73

    (34) selection_statement -> IF LPAREN expression . RPAREN statement
    (35) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82


state 74

    (36) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 36 (return_statement -> RETURN expression SEMICOLON .)


state 75

    (38) expression -> expression PLUS . term
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    term                           shift and go to state 95
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 76

    (39) expression -> expression MINUS . term
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    term                           shift and go to state 96
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 77

    (50) expression -> expression GT . expression
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 97
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 78

    (51) expression -> expression LT . expression
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 98
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 79

    (52) expression -> expression GE . expression
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 99
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 80

    (53) expression -> expression LE . expression
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 100
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 81

    (54) expression -> expression EQ . expression
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 101
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 82

    (55) expression -> expression NE . expression
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 102
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 83

    (41) term -> term MULTIPLY . factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    factor                         shift and go to state 103
    array_access                   shift and go to state 61

state 84

    (42) term -> term DIVIDE . factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    factor                         shift and go to state 104
    array_access                   shift and go to state 61

state 85

    (48) array_access -> IDENTIFIER LBRACKET . NUMBER RBRACKET
    (49) array_access -> IDENTIFIER LBRACKET . IDENTIFIER RBRACKET

    NUMBER          shift and go to state 106
    IDENTIFIER      shift and go to state 105


state 86

    (47) factor -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

    RPAREN          shift and go to state 107
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82


state 87

    (29) var_list -> var_list COMMA variable .

    SEMICOLON       reduce using rule 29 (var_list -> var_list COMMA variable .)
    COMMA           reduce using rule 29 (var_list -> var_list COMMA variable .)


state 88

    (30) variable -> IDENTIFIER .
    (31) variable -> IDENTIFIER . LBRACKET NUMBER RBRACKET

    SEMICOLON       reduce using rule 30 (variable -> IDENTIFIER .)
    COMMA           reduce using rule 30 (variable -> IDENTIFIER .)
    LBRACKET        shift and go to state 68


state 89

    (26) declaration -> INT IDENTIFIER EQUALS expression . SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

    SEMICOLON       shift and go to state 108
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82


state 90

    (31) variable -> IDENTIFIER LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 109


state 91

    (27) declaration -> FLOAT IDENTIFIER EQUALS expression . SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

    SEMICOLON       shift and go to state 110
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82


state 92

    (32) assignment -> IDENTIFIER EQUALS expression SEMICOLON .

    RBRACE          reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 32 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)


state 93

    (33) assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 111


state 94

    (34) selection_statement -> IF LPAREN expression RPAREN . statement
    (35) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (19) statement -> . declaration
    (20) statement -> . assignment
    (21) statement -> . selection_statement
    (22) statement -> . return_statement
    (23) statement -> . compound_statement
    (24) declaration -> . INT var_list SEMICOLON
    (25) declaration -> . FLOAT var_list SEMICOLON
    (26) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (27) declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (32) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (33) assignment -> . IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON
    (34) selection_statement -> . IF LPAREN expression RPAREN statement
    (35) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) return_statement -> . RETURN expression SEMICOLON
    (6) compound_statement -> . LBRACE statement_list RBRACE

    INT             shift and go to state 39
    FLOAT           shift and go to state 40
    IDENTIFIER      shift and go to state 41
    IF              shift and go to state 42
    RETURN          shift and go to state 43
    LBRACE          shift and go to state 25

    statement                      shift and go to state 112
    declaration                    shift and go to state 34
    assignment                     shift and go to state 35
    selection_statement            shift and go to state 36
    return_statement               shift and go to state 37
    compound_statement             shift and go to state 38

state 95

    (38) expression -> expression PLUS term .
    (41) term -> term . MULTIPLY factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 38 (expression -> expression PLUS term .)
    PLUS            reduce using rule 38 (expression -> expression PLUS term .)
    MINUS           reduce using rule 38 (expression -> expression PLUS term .)
    GT              reduce using rule 38 (expression -> expression PLUS term .)
    LT              reduce using rule 38 (expression -> expression PLUS term .)
    GE              reduce using rule 38 (expression -> expression PLUS term .)
    LE              reduce using rule 38 (expression -> expression PLUS term .)
    EQ              reduce using rule 38 (expression -> expression PLUS term .)
    NE              reduce using rule 38 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 38 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 83
    DIVIDE          shift and go to state 84


state 96

    (39) expression -> expression MINUS term .
    (41) term -> term . MULTIPLY factor
    (42) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 39 (expression -> expression MINUS term .)
    PLUS            reduce using rule 39 (expression -> expression MINUS term .)
    MINUS           reduce using rule 39 (expression -> expression MINUS term .)
    GT              reduce using rule 39 (expression -> expression MINUS term .)
    LT              reduce using rule 39 (expression -> expression MINUS term .)
    GE              reduce using rule 39 (expression -> expression MINUS term .)
    LE              reduce using rule 39 (expression -> expression MINUS term .)
    EQ              reduce using rule 39 (expression -> expression MINUS term .)
    NE              reduce using rule 39 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 39 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 83
    DIVIDE          shift and go to state 84


state 97

    (50) expression -> expression GT expression .
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 50 (expression -> expression GT expression .)
    RPAREN          reduce using rule 50 (expression -> expression GT expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82

  ! PLUS            [ reduce using rule 50 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 50 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 50 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 50 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 50 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 50 (expression -> expression GT expression .) ]


state 98

    (51) expression -> expression LT expression .
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 51 (expression -> expression LT expression .)
    RPAREN          reduce using rule 51 (expression -> expression LT expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82

  ! PLUS            [ reduce using rule 51 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 51 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 51 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 51 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 51 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 51 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 51 (expression -> expression LT expression .) ]


state 99

    (52) expression -> expression GE expression .
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 52 (expression -> expression GE expression .)
    RPAREN          reduce using rule 52 (expression -> expression GE expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82

  ! PLUS            [ reduce using rule 52 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 52 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 52 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 52 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 52 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 52 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 52 (expression -> expression GE expression .) ]


state 100

    (53) expression -> expression LE expression .
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 53 (expression -> expression LE expression .)
    RPAREN          reduce using rule 53 (expression -> expression LE expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82

  ! PLUS            [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 53 (expression -> expression LE expression .) ]


state 101

    (54) expression -> expression EQ expression .
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 54 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 54 (expression -> expression EQ expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82

  ! PLUS            [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 54 (expression -> expression EQ expression .) ]


state 102

    (55) expression -> expression NE expression .
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 55 (expression -> expression NE expression .)
    RPAREN          reduce using rule 55 (expression -> expression NE expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82

  ! PLUS            [ reduce using rule 55 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 55 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 55 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 55 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 55 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 55 (expression -> expression NE expression .) ]


state 103

    (41) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 41 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 41 (term -> term MULTIPLY factor .)
    SEMICOLON       reduce using rule 41 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 41 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 41 (term -> term MULTIPLY factor .)
    GT              reduce using rule 41 (term -> term MULTIPLY factor .)
    LT              reduce using rule 41 (term -> term MULTIPLY factor .)
    GE              reduce using rule 41 (term -> term MULTIPLY factor .)
    LE              reduce using rule 41 (term -> term MULTIPLY factor .)
    EQ              reduce using rule 41 (term -> term MULTIPLY factor .)
    NE              reduce using rule 41 (term -> term MULTIPLY factor .)
    RPAREN          reduce using rule 41 (term -> term MULTIPLY factor .)


state 104

    (42) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 42 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 42 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 42 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 42 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 42 (term -> term DIVIDE factor .)
    GT              reduce using rule 42 (term -> term DIVIDE factor .)
    LT              reduce using rule 42 (term -> term DIVIDE factor .)
    GE              reduce using rule 42 (term -> term DIVIDE factor .)
    LE              reduce using rule 42 (term -> term DIVIDE factor .)
    EQ              reduce using rule 42 (term -> term DIVIDE factor .)
    NE              reduce using rule 42 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 42 (term -> term DIVIDE factor .)


state 105

    (49) array_access -> IDENTIFIER LBRACKET IDENTIFIER . RBRACKET

    RBRACKET        shift and go to state 113


state 106

    (48) array_access -> IDENTIFIER LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 114


state 107

    (47) factor -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 47 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 47 (factor -> LPAREN expression RPAREN .)


state 108

    (26) declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .

    RBRACE          reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 26 (declaration -> INT IDENTIFIER EQUALS expression SEMICOLON .)


state 109

    (31) variable -> IDENTIFIER LBRACKET NUMBER RBRACKET .

    SEMICOLON       reduce using rule 31 (variable -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    COMMA           reduce using rule 31 (variable -> IDENTIFIER LBRACKET NUMBER RBRACKET .)


state 110

    (27) declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .

    RBRACE          reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 27 (declaration -> FLOAT IDENTIFIER EQUALS expression SEMICOLON .)


state 111

    (33) assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS . expression SEMICOLON
    (37) expression -> . term
    (38) expression -> . expression PLUS term
    (39) expression -> . expression MINUS term
    (50) expression -> . expression GT expression
    (51) expression -> . expression LT expression
    (52) expression -> . expression GE expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression EQ expression
    (55) expression -> . expression NE expression
    (40) term -> . factor
    (41) term -> . term MULTIPLY factor
    (42) term -> . term DIVIDE factor
    (43) factor -> . NUMBER
    (44) factor -> . FLOAT
    (45) factor -> . array_access
    (46) factor -> . IDENTIFIER
    (47) factor -> . LPAREN expression RPAREN
    (48) array_access -> . IDENTIFIER LBRACKET NUMBER RBRACKET
    (49) array_access -> . IDENTIFIER LBRACKET IDENTIFIER RBRACKET

    NUMBER          shift and go to state 59
    FLOAT           shift and go to state 60
    IDENTIFIER      shift and go to state 62
    LPAREN          shift and go to state 63

    expression                     shift and go to state 115
    term                           shift and go to state 57
    factor                         shift and go to state 58
    array_access                   shift and go to state 61

state 112

    (34) selection_statement -> IF LPAREN expression RPAREN statement .
    (35) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 116

  ! ELSE            [ reduce using rule 34 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 113

    (49) array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .

    MULTIPLY        reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    DIVIDE          reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    SEMICOLON       reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    PLUS            reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    MINUS           reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    GT              reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    LT              reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    GE              reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    LE              reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    EQ              reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    NE              reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)
    RPAREN          reduce using rule 49 (array_access -> IDENTIFIER LBRACKET IDENTIFIER RBRACKET .)


state 114

    (48) array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .

    MULTIPLY        reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    SEMICOLON       reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    GT              reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    LT              reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    GE              reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    LE              reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    EQ              reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    NE              reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)
    RPAREN          reduce using rule 48 (array_access -> IDENTIFIER LBRACKET NUMBER RBRACKET .)


state 115

    (33) assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression . SEMICOLON
    (38) expression -> expression . PLUS term
    (39) expression -> expression . MINUS term
    (50) expression -> expression . GT expression
    (51) expression -> expression . LT expression
    (52) expression -> expression . GE expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . EQ expression
    (55) expression -> expression . NE expression

    SEMICOLON       shift and go to state 117
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    GT              shift and go to state 77
    LT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    EQ              shift and go to state 81
    NE              shift and go to state 82


state 116

    (35) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (19) statement -> . declaration
    (20) statement -> . assignment
    (21) statement -> . selection_statement
    (22) statement -> . return_statement
    (23) statement -> . compound_statement
    (24) declaration -> . INT var_list SEMICOLON
    (25) declaration -> . FLOAT var_list SEMICOLON
    (26) declaration -> . INT IDENTIFIER EQUALS expression SEMICOLON
    (27) declaration -> . FLOAT IDENTIFIER EQUALS expression SEMICOLON
    (32) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (33) assignment -> . IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON
    (34) selection_statement -> . IF LPAREN expression RPAREN statement
    (35) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (36) return_statement -> . RETURN expression SEMICOLON
    (6) compound_statement -> . LBRACE statement_list RBRACE

    INT             shift and go to state 39
    FLOAT           shift and go to state 40
    IDENTIFIER      shift and go to state 41
    IF              shift and go to state 42
    RETURN          shift and go to state 43
    LBRACE          shift and go to state 25

    statement                      shift and go to state 118
    declaration                    shift and go to state 34
    assignment                     shift and go to state 35
    selection_statement            shift and go to state 36
    return_statement               shift and go to state 37
    compound_statement             shift and go to state 38

state 117

    (33) assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .

    RBRACE          reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)
    INT             reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)
    IF              reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 33 (assignment -> IDENTIFIER LBRACKET NUMBER RBRACKET EQUALS expression SEMICOLON .)


state 118

    (35) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT             reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 35 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 25 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 25 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 25 resolved as shift
WARNING: shift/reduce conflict for IF in state 25 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 25 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 25 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for GT in state 97 resolved as shift
WARNING: shift/reduce conflict for LT in state 97 resolved as shift
WARNING: shift/reduce conflict for GE in state 97 resolved as shift
WARNING: shift/reduce conflict for LE in state 97 resolved as shift
WARNING: shift/reduce conflict for EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for NE in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for GT in state 98 resolved as shift
WARNING: shift/reduce conflict for LT in state 98 resolved as shift
WARNING: shift/reduce conflict for GE in state 98 resolved as shift
WARNING: shift/reduce conflict for LE in state 98 resolved as shift
WARNING: shift/reduce conflict for EQ in state 98 resolved as shift
WARNING: shift/reduce conflict for NE in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for GT in state 99 resolved as shift
WARNING: shift/reduce conflict for LT in state 99 resolved as shift
WARNING: shift/reduce conflict for GE in state 99 resolved as shift
WARNING: shift/reduce conflict for LE in state 99 resolved as shift
WARNING: shift/reduce conflict for EQ in state 99 resolved as shift
WARNING: shift/reduce conflict for NE in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for GT in state 100 resolved as shift
WARNING: shift/reduce conflict for LT in state 100 resolved as shift
WARNING: shift/reduce conflict for GE in state 100 resolved as shift
WARNING: shift/reduce conflict for LE in state 100 resolved as shift
WARNING: shift/reduce conflict for EQ in state 100 resolved as shift
WARNING: shift/reduce conflict for NE in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for GT in state 101 resolved as shift
WARNING: shift/reduce conflict for LT in state 101 resolved as shift
WARNING: shift/reduce conflict for GE in state 101 resolved as shift
WARNING: shift/reduce conflict for LE in state 101 resolved as shift
WARNING: shift/reduce conflict for EQ in state 101 resolved as shift
WARNING: shift/reduce conflict for NE in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for GT in state 102 resolved as shift
WARNING: shift/reduce conflict for LT in state 102 resolved as shift
WARNING: shift/reduce conflict for GE in state 102 resolved as shift
WARNING: shift/reduce conflict for LE in state 102 resolved as shift
WARNING: shift/reduce conflict for EQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NE in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 112 resolved as shift
